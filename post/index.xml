<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 千阳谷</title>
    <link>https://huoyanwuzhe629.github.io/post/</link>
    <description>Recent content in Posts on 千阳谷</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 10 Dec 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://huoyanwuzhe629.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>前端基础面试手写题</title>
      <link>https://huoyanwuzhe629.github.io/post/interview/handwriting4js/</link>
      <pubDate>Fri, 10 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huoyanwuzhe629.github.io/post/interview/handwriting4js/</guid>
      <description>&lt;p&gt;前端面试会经常问一些js基础的手写题，如防抖节流，promise实现等等，需要经常查看与巩固。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>小程序开发选型</title>
      <link>https://huoyanwuzhe629.github.io/post/miniprogram_architech_selection/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://huoyanwuzhe629.github.io/post/miniprogram_architech_selection/</guid>
      <description>小程序开发选型分享 现在小程序的开发也越来越成熟了，完善了很多的API、组件、架构等，社区也由原来的零星点点到现在的不大不小，但也算是有了，期</description>
    </item>
    
    <item>
      <title>nodejs单元测试</title>
      <link>https://huoyanwuzhe629.github.io/post/unittesting/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://huoyanwuzhe629.github.io/post/unittesting/</guid>
      <description>&lt;h2 id=&#34;为什么需要单元测试&#34;&gt;为什么需要单元测试&lt;/h2&gt;

&lt;p&gt;代码部署之前，进行一定的单元测试是十分必要的，这样能够有效并且持续保证代码质量。而实践表明，高质量的单元测试还可以帮助我们完善自己的代码。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>前端工程化之代码规范化及测试规范化</title>
      <link>https://huoyanwuzhe629.github.io/post/fe-engineering/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://huoyanwuzhe629.github.io/post/fe-engineering/</guid>
      <description>&lt;p&gt;前端开发项目工程复杂度越来越高，需要用一些规范来保证经手开发人员较多之后，扔能保证相当的可维护性与稳定性，这就需要项目代码保持稳定的规范和质量，因此，引入代码规范和单元测试就十分必要了。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nodejs异常处理</title>
      <link>https://huoyanwuzhe629.github.io/post/exceptional_handling/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://huoyanwuzhe629.github.io/post/exceptional_handling/</guid>
      <description>&lt;h2 id=&#34;好的错误处理&#34;&gt;好的错误处理&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;出现错误时能将任务中断在一个合适的位置&lt;/p&gt;

&lt;p&gt;比如用户请求服务数据，服务在向其他服务请求或者查数据库时出问题，如果直接停在出问题的地方，用户就得一直等服务响应直至超时，我们应该通过合理的错误处理，返回一个错误响应，以让用户明白情况&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>响应式编程入门</title>
      <link>https://huoyanwuzhe629.github.io/post/reactive-programming/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://huoyanwuzhe629.github.io/post/reactive-programming/</guid>
      <description>&lt;h2 id=&#34;什么是响应式编程&#34;&gt;什么是响应式编程&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;响应式编程就是用异步数据流进行编程&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;即使是最典型的点击事件也是一个异步事件流，从而可以对其进行侦测（observe）并进行相应操作。&lt;/p&gt;

&lt;p&gt;可以基于任何东西创建数据流。流非常轻便，并且无处不在，任何东西都可以是一个流：变量，用户输入，属性，缓存，数据结构等等。例如，想象一下微博推文也可以是一个数据流，和点击事件一样。你可以对其进行侦听，并作相应反应。&lt;/p&gt;

&lt;p&gt;在用户界面编程领域以及基于实时系统的动画方面都有广泛的应用。另一方面，在处理嵌套回调的异步事件，复杂的列表过滤和变换的时候也都有良好的表现。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>移动端自适应实践</title>
      <link>https://huoyanwuzhe629.github.io/post/mobile-rem-practice/</link>
      <pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://huoyanwuzhe629.github.io/post/mobile-rem-practice/</guid>
      <description>&lt;h3 id=&#34;市面上的方案&#34;&gt;市面上的方案&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;流式布局&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;也就是固定高度，宽度使用百分比的方法，这种方法会导致一些元素在大屏手机上拉伸严重的情况，影响视觉效果，只有在很少一部分手机上能完美的展示设计师想要的效果。携程之前用的就是流式布局，但之后也改版了。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>